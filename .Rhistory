final_elo_diff = as.integer(round(final_elo_diff,0)),
n = n()) %>%
group_by(final_elo_diff) %>%
summarise(freq = n(),
perc = freq / n) %>%
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id,
final_elo_diff = as.integer(round(final_elo_diff,0)),
n = n()) %>%
group_by(final_elo_diff) %>%
transmute(freq = n(),
perc = freq / n) %>%
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id,
final_elo_diff = as.integer(round(final_elo_diff,0)),
n = n()) %>%
group_by(final_elo_diff) %>%
summarise(freq = n())
# perc = freq / n)
%>%
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id,
final_elo_diff = as.integer(round(final_elo_diff,0)),
n = n()) %>%
group_by(final_elo_diff) %>%
summarise(freq = n()) %>%
# perc = freq / n)
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0)) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
slice(1:10)
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0)) %>%
group_by(final_elo_diff) %>%
# summarise (n = n()) %>%
slice(1:10)
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0)) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0))) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
slice(1:10)
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0))) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
slice(1:10)
final_elo_diff_freq <-
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0))) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
slice(1:10)
final_elo_diff_freq <- as.data.frame(final_elo_diff_freq)
final_elo_diff_freq
final_elo_diff_freq <-
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0))) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
final_elo_diff_freq <- as.data.frame(final_elo_diff_freq)
final_elo_diff_freq
sum(final_elo_diff_freq$freq)
final_elo_diff_freq
final_elo_diff_freq <-
user_elo_decay_2_a %>%
select(account_id, final_elo_diff) %>%
transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0))) %>%
group_by(final_elo_diff) %>%
summarise (n = n()) %>%
mutate(perc = n / sum(n))
final_elo_diff_freq <- as.data.frame(final_elo_diff_freq)
final_elo_diff_freq
hist(user_elo_decay_2$final_elo_diff)
hist(user_elo_decay_1$final_elo_diff)
hist(user_elo_decay_1$final_elo_diff, breaks = seq(from = min(as.numeric(user_elo_decay_1$final_elo_diff)),
to = max(user_elo_decay_1$final_elo_diff),
by = 1))
hist(user_elo_decay_2$final_elo_diff)
hist(user_elo_decay_2$final_elo_diff, breaks = seq(from = -50, to = 50, by = 1))
hist(user_elo_decay_2$final_elo_diff, breaks = seq(from = -50, to = 50, by = 1))
hist(user_elo_decay_2$pre_churn_lifetime_days, breaks =
seq(from = min(user_elo_decay_2$pre_churn_lifetime_days),
to = max(user_elo_decay_2$pre_churn_lifetime_days),
by = 1))
hist(user_elo_decay_2$days_since_active, breaks =
seq(from = min(user_elo_decay_2$days_since_active),
to = max(user_elo_decay_2$days_since_active),
by = 1))
g7 <- ggplot(user_elo_decay_2_a,
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
facet_wrap(~ dsa_quartiles, ncol = 2)
g7
rm(g7)
g1 <- ggplot(user_elo_decay_2_a,
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
facet_wrap(~ dsa_quartiles, ncol = 2)
g1
g1 <- ggplot(user_elo_decay_2_a,
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
facet_wrap(~ dsa_quartiles, ncol = 2)
g1
rm(g7b)
rm(g7c)
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active Quartile",
atop(italic("For Users w/ 2 or More Pre Churn Lifetime Days"), ""))))
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active Quartile",
atop(italic("For Users w/ 2 or More Pre Churn Lifetime Days"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note: Days Since Active is filtered to Top 25 buckets"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note Days Since Active is filtered to Top 25 buckets"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note "), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note Days Since Active is Filtered to Top 25 buckets"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note Days Since Active is Filtered"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note: Showing days 8 to 27"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note: Showing 'Days Since Actve' from 8 to 27"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle("Avg. ELO Diff. by Days Since Active Quartile") +
ggtitle(expression(atop("Avg. ELO Diff. by Days Since Active",
atop(italic("Note: Showing Days Since Actve from 8 to 27"), "")))) +
facet_wrap(~ days_since_active,
# scales = "free",
ncol = 5)
g1b
g1c <- ggplot(subset(user_elo_decay_2_a, pre_churn_lifetime_days <= 24),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle(expression(atop("Avg. ELO Diff. by Pre Churn Lifetime Days",
atop(italic("Note: Showing Days Since Actve from 8 to 27"), "")))) +
facet_wrap(~ pre_churn_lifetime_days,
# scales = "free",
ncol = 5)
g1c <- ggplot(subset(user_elo_decay_2_a, pre_churn_lifetime_days <= 24),
aes(x = final_elo_diff)) +
geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts
bins = 55) +
ggtitle(expression(atop("Avg. ELO Diff. by Pre Churn Lifetime Days",
atop(italic("Note: Showing Pre Churn Lifetime Days from 0 to 24"), "")))) +
facet_wrap(~ pre_churn_lifetime_days,
# scales = "free",
ncol = 5)
g1c
g9 <- ggplot(avg_elo_decay_by_days_since_active,
aes(x = days_since_active,
y = avg_final_elo_diff
))
g9 + geom_bar(stat = "identity") +
ggtitle("Avg. ELO Diff. by Days Since Active") +
labs(x = "Days Since Active", y = "Avg. Final ELO Diff.") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
g9 + geom_bar(stat = "identity") +
ggtitle(expression(atop("Avg. ELO Diff. by Pre Churn Lifetime Days",
atop(italic("Note: Sample Sizes above 40 days are very small"), "")))) +
labs(x = "Days Since Active", y = "Avg. Final ELO Diff.") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
g9
g9 + geom_bar(stat = "identity") +
ggtitle("Avg. ELO Diff. by Pre Churn Lifetime Days") +
labs(x = "Days Since Active", y = "Avg. Final ELO Diff.") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
g9 <- ggplot(avg_elo_decay_by_days_since_active,
aes(x = days_since_active,
y = avg_final_elo_diff
))
g9 + geom_bar(stat = "identity") +
ggtitle("Avg. ELO Diff. by Days Since Active") +
labs(x = "Days Since Active", y = "Avg. Final ELO Diff.") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
g10 <- ggplot(avg_elo_decay_by_pre_churn_lifetime_days,
aes(x = pre_churn_lifetime_days,
y = avg_final_elo_diff
))
g10 + geom_bar(stat = "identity") +
ggtitle("Avg. ELO Diff. by Pre Churn Lifetime Days") +
labs(x = "Pre Churn Lifetime Days", y = "Avg. Final ELO Diff.") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
library(RPostgreSQL)
library(plyr)
library(dplyr)
library(ggplot2)
driver <- dbDriver("PostgreSQL")
conn <- dbConnect(driver, host="superevilmegacorp.redshift.amplitude.com",
port="5439",
dbname="superevilmegacorp",
user="superevilmegacorp",
password="GQdPSadICW2lL5qCkS20U9Jk")
# Note: this adds player_elo, which is then bucketed and used as a grouping variable
# Doing it separately here to keep the elo_decay.R script from duplicating things / being messy
user_elo_decay_n_sql  <-
"Select
account_id
,player_elo
,days_since_active
,pre_churn_lifetime_days
,avg_pre_churn_player_elo
,avg_post_churn_player_elo
,(avg_post_churn_player_elo - avg_pre_churn_player_elo) as pre_post_avg_player_elo_diff
,pre_post_5_match_elo_diff as final_elo_diff
From reactivated_accounts_e
Group By 1,2,3,4,5,6,7,8"
user_elo_decay_n <- dbGetQuery(conn, paste("SET search_path = app139203;",
user_elo_decay_n_sql, sep = ""))
user_elo_decay_n <- filter(user_elo_decay_n, !is.na(final_elo_diff))
user_elo_decay_n <- dbGetQuery(conn, paste("SET search_path = app139203;",
user_elo_decay_n_sql, sep = ""))
user_elo_decay_n <- filter(user_elo_decay_n, !is.na(final_elo_diff))
user_elo_decay_n <-
user_elo_decay_n %>%
transform(player_elo_buckets = floor(player_elo / 100))
overall_pre_post_avg_player_elo_diff <-
user_elo_decay_n %>%
select(player_elo_buckets
,avg_pre_churn_player_elo
,avg_post_churn_player_elo
,pre_post_avg_player_elo_diff) %>%
group_by(player_elo_buckets) %>%
summarise(overall_avg_pre_churn_player_elo = mean(avg_pre_churn_player_elo, na.rm = TRUE),
overall_avg_post_churn_player_elo = mean(avg_post_churn_player_elo, na.rm = TRUE),
overall_pre_post_avg_player_elo_diff = mean(pre_post_avg_player_elo_diff, na.rm = TRUE)
)
print(tbl_df(overall_pre_post_avg_player_elo_diff), n = 30)
g14 <- ggplot(overall_pre_post_avg_player_elo_diff,
aes(x = player_elo_buckets,
y = overall_pre_post_avg_player_elo_diff))
g14 + geom_bar(stat = "identity") +
ggtitle("User Count by ELO Bucket") +
labs(x = "ELO Bucket", y = "Overall AVG ELO Diff Between Abs. Value ELO Pre/Post") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
g14 + geom_bar(stat = "identity") +
ggtitle("Overall AVG ELO Diff Between Abs. Value ELO Pre/Post") +
labs(x = "ELO Bucket", y = "Overall AVG ELO Diff Between Abs. Value ELO Pre/Post") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
g15 <- ggplot(overall_pre_post_avg_player_elo_diff,
aes(x = player_elo_buckets,
y = overall_avg_pre_churn_player_elo))
g15 + geom_bar(stat = "identity") +
ggtitle("Overall AVG ELO Diff Between Abs. Value ELO Pre/Post") +
labs(x = "ELO Bucket", y = "Overall AVG Prechurn ELO Abs. Value") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
g15 <- ggplot(overall_pre_post_avg_player_elo_diff,
aes(x = player_elo_buckets,
y = overall_avg_post_churn_player_elo))
g15 + geom_bar(stat = "identity") +
ggtitle("Overall AVG ELO Diff Between Abs. Value ELO Pre/Post") +
labs(x = "ELO Bucket", y = "Overall AVG Prechurn ELO Abs. Value") +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(size = 10, angle = 00))
rm(g15)
rm(list =ls())
library(RPostgreSQL)
library(data.table)
library(plyr)
library(dplyr)
library(ggplot2)
driver <- dbDriver("PostgreSQL")
conn <- dbConnect(driver, host="superevilmegacorp.redshift.amplitude.com",
port="5439",
dbname="superevilmegacorp",
user="superevilmegacorp",
password="GQdPSadICW2lL5qCkS20U9Jk")
user_elo_decay_sql  <-
"Select
account_id
,days_since_active
,pre_churn_lifetime_days
,pre_post_5_match_elo_diff as final_elo_diff
From reactivated_accounts_e
Group By 1,2,3,4"
user_elo_decay <- dbGetQuery(conn, paste("SET search_path = app139203;",
user_elo_decay_sql, sep = ""))
user_elo_decay <- filter(user_elo_decay, !is.na(final_elo_diff))
min(as.numeric(user_elo_decay$final_elo_diff)); max(user_elo_decay$final_elo_diff)
hist(user_elo_decay$final_elo_diff,
breaks = seq(from = min(as.numeric(user_elo_decay$final_elo_diff)),
to = max(user_elo_decay$final_elo_diff),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(round(user_elo_decay$final_elo_diff),
breaks = seq(from = min(as.numeric(user_elo_decay$final_elo_diff)),
to = max(user_elo_decay$final_elo_diff),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(user_elo_decay$final_elo_diff,
breaks = seq(from = min(as.numeric(round(user_elo_decay$final_elo_diff))),
to = max(round(user_elo_decay$final_elo_diff)),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(user_elo_decay$final_elo_diff,
breaks = seq(from = min(as.numeric(user_elo_decay$final_elo_diff)),
to = max(user_elo_decay$final_elo_diff),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(subset(user_elo_decay$final_elo_diff,
user_elo_decay$final_elo_diff >= min(as.numeric(user_elo_decay$final_elo_diff)),
user_elo_decay$final_elo_diff <= max(user_elo_decay$final_elo_diff)),
breaks = seq(from = min(as.numeric(user_elo_decay$final_elo_diff)),
to = max(user_elo_decay$final_elo_diff),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
min(as.numeric(user_elo_decay$final_elo_diff)); max(user_elo_decay$final_elo_diff)
round(min(as.numeric(user_elo_decay$final_elo_diff)))
hist(subset(user_elo_decay$final_elo_diff,
user_elo_decay$final_elo_diff >= round(min(as.numeric(user_elo_decay$final_elo_diff))),
user_elo_decay$final_elo_diff <= round(max(user_elo_decay$final_elo_diff))),
breaks = seq(from = min(as.numeric(user_elo_decay$final_elo_diff)),
to = max(user_elo_decay$final_elo_diff),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(subset(user_elo_decay$final_elo_diff,
user_elo_decay$final_elo_diff >= round(min(as.numeric(user_elo_decay$final_elo_diff))),
user_elo_decay$final_elo_diff <= round(max(user_elo_decay$final_elo_diff))),
breaks = seq(from = round(min(as.numeric(user_elo_decay$final_elo_diff))),
to = round(max(user_elo_decay$final_elo_diff))),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(subset(user_elo_decay$final_elo_diff,
user_elo_decay$final_elo_diff >= round(min(as.numeric(user_elo_decay$final_elo_diff))),
user_elo_decay$final_elo_diff <= round(max(user_elo_decay$final_elo_diff))),
breaks = seq(from = round(min(as.numeric(user_elo_decay$final_elo_diff))),
to = round(max(user_elo_decay$final_elo_diff)),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
round(min(as.numeric(user_elo_decay$final_elo_diff))); max(user_elo_decay$final_elo_diff)
hist(user_elo_decay$final_elo_diff,
breaks = seq(from = round(min(as.numeric(user_elo_decay$final_elo_diff))),
to = round(max(user_elo_decay$final_elo_diff)),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(user_elo_decay$final_elo_diff,
# breaks = seq(from = round(min(as.numeric(user_elo_decay$final_elo_diff))),
#              to = round(max(user_elo_decay$final_elo_diff)),
#              by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
hist(user_elo_decay$final_elo_diff,
breaks = seq(from = min(as.numeric(user_elo_decay$final_elo_diff)),
to = max(user_elo_decay$final_elo_diff),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
min(as.numeric(user_elo_decay$final_elo_diff)); max(user_elo_decay$final_elo_diff)
hist(user_elo_decay$final_elo_diff,
breaks = seq(from = -430, #min(as.numeric(user_elo_decay$final_elo_diff)),
to = 557, #max(user_elo_decay$final_elo_diff),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
min(as.numeric(user_elo_decay$final_elo_diff))
round(min(as.numeric(user_elo_decay$final_elo_diff)))
round(max(user_elo_decay$final_elo_diff))
hist(user_elo_decay$final_elo_diff,
breaks = seq(from = (round(min(as.numeric(user_elo_decay$final_elo_diff))) -1),
to = (round(max(user_elo_decay$final_elo_diff)) + 1),
by = 1),
main = "Avg. ELO Differece Pre/Post Reactivation",
xlab = "Avg. ELO Differece")
