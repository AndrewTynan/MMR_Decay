{
    "collab_server" : "",
    "contents" : "\n# Mark: high level avg of the pre and post periods (no buckets)\n# 2) add chart of avg ELO Diff by ELO_Buckets \n\nlibrary(RPostgreSQL)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ndriver <- dbDriver(\"PostgreSQL\") \nconn <- dbConnect(driver, host=\"superevilmegacorp.redshift.amplitude.com\",\n                  port=\"5439\",\n                  dbname=\"superevilmegacorp\",\n                  user=\"superevilmegacorp\",\n                  password=\"GQdPSadICW2lL5qCkS20U9Jk\")\n\n# Note: this adds player_elo, which is then bucketed and used as a grouping variable \n# Doing it separately here to keep the elo_decay.R script from duplicating things / being messy \n\nuser_elo_decay_n_sql  <-\n\"Select\naccount_id \n,player_elo\n,days_since_active \n,pre_churn_lifetime_days \n,avg_pre_churn_player_elo \n,avg_post_churn_player_elo \n,(avg_post_churn_player_elo - avg_pre_churn_player_elo) as pre_post_avg_player_elo_diff\n,pre_post_5_match_elo_diff as final_elo_diff\nFrom reactivated_accounts_e\nGroup By 1,2,3,4,5,6,7,8\"\n\nuser_elo_decay_n <- dbGetQuery(conn, paste(\"SET search_path = app139203;\",\n                                           user_elo_decay_n_sql, sep = \"\"))\n\nhead(user_elo_decay_n)\nstr(user_elo_decay_n)  #389,168 obs. of  4 variables:\n\n#remove the NAs \nuser_elo_decay_n <- filter(user_elo_decay_n, !is.na(final_elo_diff))\n#compare obs # to previous to see how many rows were removed \nstr(user_elo_decay_n)  #385355 obs. of  4 variables:\n\n# dist has more negative values, but a very slightly positive avg \n# 0.2476781\nmean(user_elo_decay_n$final_elo_diff) \n\n#create player_elo buckets \nuser_elo_decay_n <-\n  user_elo_decay_n %>%\n  transform(player_elo_buckets = floor(player_elo / 100))\n\n#check player_elo_buckets ranges \nplayer_elo_buckets_check <- \n  user_elo_decay_n %>%\n  filter(player_elo, player_elo_buckets) %>% \n  group_by(player_elo_buckets) %>% \n  summarise(min_player_elo = min(player_elo),\n            max_player_elo = max(player_elo))\n\n#annoying way to print entire tibble \nprint(tbl_df(player_elo_buckets_check), n=40)\n\n#plot elo diff distributions by player_elo_buckets\ng11a <- ggplot(subset(user_elo_decay_n, \n                      player_elo_buckets >= 5 & \n                        player_elo_buckets <= 24),\n             aes(x = final_elo_diff)) + \n  geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts \n                 bins = 55) + \n  ggtitle(\"Histogram of Avg. ELO Diff. by ELO Bucket\") + \n  facet_wrap(~ player_elo_buckets, \n             scales = \"free\",             \n             ncol = 5) \n\nhead(user_elo_decay_n)\n\n# GET AVG ELO Diff. by player_elo_buckets\navg_elo_decay_by_player_elo_buckets <-\n  user_elo_decay_n %>%  \n  select(player_elo_buckets, final_elo_diff) %>% \n  group_by(player_elo_buckets) %>% \n  summarise(avg_final_elo_diff = mean(final_elo_diff, na.rm = TRUE))\n\n#check data \nprint(tbl_df(avg_elo_decay_by_player_elo_buckets), n=30)\n\n#plot AVG ELO Diff. by player_elo_buckets\ng12 <- ggplot(avg_elo_decay_by_player_elo_buckets,\n              aes(x = player_elo_buckets,\n                  y = avg_final_elo_diff))\n\ng12 + geom_bar(stat = \"identity\") +\n  ggtitle(\"Avg. ELO Diff. by ELO Bucket\") +\n  labs(x = \"ELO Bucket\", y = \"Avg. ELO Diff.\") +\n  theme(legend.position=\"bottom\") +\n  theme(axis.text.x = element_text(size = 10, angle = 00))  \n\n# get counts of users by elo buckets (for making dist. chart)\nuser_count_by_player_elo_buckets <-\n  user_elo_decay_n %>%  \n  select(account_id, player_elo_buckets) %>% \n  group_by(player_elo_buckets) %>% \n  summarise(user_count = n()) \n\nprint(tbl_df(user_count_by_player_elo_buckets), n = 30)\n\n#plot AVG ELO Diff. by pre_churn_lifetime_days\ng13 <- ggplot(user_count_by_player_elo_buckets,\n              aes(x = player_elo_buckets,\n                  y = user_count))\n\ng13 + geom_bar(stat = \"identity\") +\n  ggtitle(\"User Count by ELO Bucket\") +\n  labs(x = \"ELO Bucket\", y = \"User Count\") +\n  theme(legend.position=\"bottom\") +\n  theme(axis.text.x = element_text(size = 10, angle = 00))  \n\n## NOW Chart the avg pre post ELOs and then bind together and get diff.\n# GET AVG ELO Diff. by player_elo_buckets\noverall_pre_post_avg_player_elo_diff <-\n  user_elo_decay_n %>%  \n  select(player_elo_buckets\n        ,avg_pre_churn_player_elo\n        ,avg_post_churn_player_elo\n        ,pre_post_avg_player_elo_diff) %>% \n  group_by(player_elo_buckets) %>% \n  summarise(overall_avg_pre_churn_player_elo = mean(avg_pre_churn_player_elo, na.rm = TRUE),\n            overall_avg_post_churn_player_elo = mean(avg_post_churn_player_elo, na.rm = TRUE),\n            overall_pre_post_avg_player_elo_diff = mean(pre_post_avg_player_elo_diff, na.rm = TRUE)\n            )\n\nprint(tbl_df(overall_pre_post_avg_player_elo_diff), n = 30)\n\n#plot overall_pre_post_avg_player_elo_diff\ng14 <- ggplot(overall_pre_post_avg_player_elo_diff,\n              aes(x = player_elo_buckets,\n                  y = overall_pre_post_avg_player_elo_diff))\n\ng14 + geom_bar(stat = \"identity\") +\n  ggtitle(\"Overall AVG ELO Diff Between Abs. Value ELO Pre/Post\") +\n  labs(x = \"ELO Bucket\", y = \"Overall AVG ELO Diff Between Abs. Value ELO Pre/Post\") +\n  theme(legend.position=\"bottom\") +\n  theme(axis.text.x = element_text(size = 10, angle = 00))  \n\n\n",
    "created" : 1478043748170.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "209948022",
    "id" : "9D77FD34",
    "lastKnownWriteTime" : 1478193198,
    "last_content_update" : 1478193198241,
    "path" : "~/Desktop/Redshift_Cron/R_Work/R_Projects/MMR Decay/elo_decay_w_buckets.R",
    "project_path" : "elo_decay_w_buckets.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}