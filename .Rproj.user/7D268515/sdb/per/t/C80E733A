{
    "collab_server" : "",
    "contents" : "\nlibrary(RPostgreSQL)\nlibrary(data.table)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\ndriver <- dbDriver(\"PostgreSQL\") \nconn <- dbConnect(driver, host=\"superevilmegacorp.redshift.amplitude.com\",\n                  port=\"5439\",\n                  dbname=\"superevilmegacorp\",\n                  user=\"superevilmegacorp\",\n                  password=\"GQdPSadICW2lL5qCkS20U9Jk\")\n\nuser_elo_decay_sql  <-\n\"Select\n account_id \n,days_since_active \n,pre_churn_lifetime_days \n,pre_post_5_match_elo_diff as final_elo_diff\nFrom reactivated_accounts_e\nGroup By 1,2,3,4\"\n\nuser_elo_decay <- dbGetQuery(conn, paste(\"SET search_path = app139203;\",\n                                   user_elo_decay_sql, sep = \"\"))\n\nhead(user_elo_decay)\nstr(user_elo_decay)  #389,162 obs. of  4 variables:\nunique(user_elo_decay$final_elo_diff)\nclass(user_elo_decay$final_elo_diff)\n\n#remove the NAs \nuser_elo_decay <- filter(user_elo_decay, !is.na(final_elo_diff))\n#compare obs # to previous to see how many rows were removed \nstr(user_elo_decay)  #385349 obs. of  4 variables:\n\n#get the range, using min and max, then added these into the hist below \n#-515                                            397\nmin(as.numeric(user_elo_decay$final_elo_diff)); max(user_elo_decay$final_elo_diff)\n\n# dist has more negative values, but a very slightly positive avg \n# 0.24703\nhist(user_elo_decay$final_elo_diff) #, col = ifelse(user_elo_decay$final_elo_diff > 0, \"green\", \"red\"))\nmean(user_elo_decay$final_elo_diff) \n\n#not sure why the col parameter does not work when I specify breaks ?? \n#colors = ifelse(user_elo_decay$final_elo_diff > 0, \"green\", \"red\")\n\npar(mfrow = c(1,2))\nhist(user_elo_decay$final_elo_diff, \n     breaks = seq(from = (round(min(as.numeric(user_elo_decay$final_elo_diff))) -1),\n                  to = (round(max(user_elo_decay$final_elo_diff)) + 1),\n                  by = 1),\n     main = \"Avg. ELO Differece Pre/Post Reactivation\",\n     xlab = \"Avg. ELO Differece\")\n\n#remove the outliers \nuser_elo_decay_2 <- filter(user_elo_decay,\n                           final_elo_diff >= -50,\n                           final_elo_diff <= 50\n                           )\n#\nstr(user_elo_decay_2) #384,486 obs. of  4 variables\n#trimming to range of -50 to +50 keeps 99.8% of the records \n384486 / 385349\n\n#range and value checks \nmin(as.numeric(user_elo_decay_2$final_elo_diff)); max(user_elo_decay_2$final_elo_diff)\nsort(unique(round(user_elo_decay_2$final_elo_diff)))\n\n#histograms of the trimmed datat set \nhist(user_elo_decay_2$final_elo_diff)\n# final_elo_diff\nhist(user_elo_decay_2$final_elo_diff, \n     breaks = seq(from = -50, to = 50, by = 1),\n     main = \"Outlier Removed Avg. ELO Differece Pre/Post Reactivation\",\n     xlab = \"Avg. ELO Differece\")     \n     #, col = ifelse(user_elo_decay$final_elo_diff > 0, \"green\", \"red\") \n\n# pre_churn_lifetime_days\nhist(user_elo_decay_2$pre_churn_lifetime_days, \n     breaks = seq(from = min(user_elo_decay_2$pre_churn_lifetime_days),\n                  to = max(user_elo_decay_2$pre_churn_lifetime_days),\n                  by = 1),\n     main = \"Pre-Churn Lifetime Days\")\n\n# days_since_active\nhist(user_elo_decay_2$days_since_active, \n     breaks = seq(from = min(user_elo_decay_2$days_since_active),\n                   to = max(user_elo_decay_2$days_since_active),\n                   by = 1),\n     main = \"Days Since Active\")\n\n#create dsa_quartiles for days_since_active\nuser_elo_decay_2_a <- \n  user_elo_decay_2 %>%  \n  mutate(dsa_quartiles = ntile(days_since_active, 4))\n\n#checks\nhead(user_elo_decay_2_a)\nstr(user_elo_decay_2_a) # 384486 obs. of  5 variables:\n    \n#check quartile ranges \nuser_elo_decay_2_a %>%  \n  group_by(dsa_quartiles) %>% \n  select(days_since_active) %>% \n  summarise(min_days_since_active = min(days_since_active),\n            max_days_since_active = max(days_since_active))\n\n#plot elo diff distributions by days since active dsa_quartiles \ng1 <- ggplot(user_elo_decay_2_a,\n             aes(x = final_elo_diff)) + \n  geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts \n                 bins = 55) + \n  ggtitle(\"Histogram of Avg. ELO Diff. by Days Since Active Quartile\") + \n  facet_wrap(~ dsa_quartiles, ncol = 2)\n\n#filter days since active <= 27 (for better charting)\n  #facet wrap dist. at each level of days since active \ng1b <- ggplot(subset(user_elo_decay_2_a, days_since_active <= 27),\n             aes(x = final_elo_diff)) + \n  geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts \n                 bins = 55) + \n  ggtitle(\"Histogram of Avg. ELO Diff. by Days Since Active Quartile\") + \n  ggtitle(expression(atop(\"Avg. ELO Diff. by Days Since Active\", \n                          atop(italic(\"Note: Showing Days Since Actve from 8 to 27\"), \"\")))) +\n  facet_wrap(~ days_since_active, \n             # scales = \"free\",\n             ncol = 5)\n\n#filter days since active <= 25 (for better charting)\n  #facet wrap dist. at each level of days since active \ng1c <- ggplot(subset(user_elo_decay_2_a, pre_churn_lifetime_days <= 24),\n              aes(x = final_elo_diff)) + \n  geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts \n                 bins = 55) + \n  ggtitle(expression(atop(\"Histogram of Avg. ELO Diff. by Pre Churn Lifetime Days\", \n                          atop(italic(\"Note Showing Pre Churn Lifetime Days from 0 to 24\"), \"\")))) +\n  facet_wrap(~ pre_churn_lifetime_days, \n             # scales = \"free\",\n             ncol = 5)\n\n# GET AVG ELO Diff. by days since active \navg_elo_decay_by_days_since_active <-\n  user_elo_decay_2_a %>%  \n  select(days_since_active, final_elo_diff) %>% \n  group_by(days_since_active) %>% \n  summarise(avg_final_elo_diff = mean(final_elo_diff, na.rm = TRUE))\n\n#plot AVG ELO Diff. by days since active \ng9 <- ggplot(avg_elo_decay_by_days_since_active,\n              aes(x = days_since_active,\n                  y = avg_final_elo_diff))\n\ng9 + geom_bar(stat = \"identity\") +\n  ggtitle(\"Avg. ELO Diff. by Days Since Active\") +\n  labs(x = \"Days Since Active\", y = \"Avg. Final ELO Diff.\") +\n  theme(legend.position=\"bottom\") +\n  theme(axis.text.x = element_text(size = 10, angle = 00))\n\n\n# GET AVG ELO Diff. by pre_churn_lifetime_days\navg_elo_decay_by_pre_churn_lifetime_days <-\n  user_elo_decay_2_a %>%  \n  select(pre_churn_lifetime_days, final_elo_diff) %>% \n  group_by(pre_churn_lifetime_days) %>% \n  summarise(avg_final_elo_diff = mean(final_elo_diff, na.rm = TRUE))\n\n#plot AVG ELO Diff. by pre_churn_lifetime_days\ng10 <- ggplot(avg_elo_decay_by_pre_churn_lifetime_days,\n             aes(x = pre_churn_lifetime_days,\n                 y = avg_final_elo_diff\n             ))\ng10 + geom_bar(stat = \"identity\") +\n  ggtitle(\"Avg. ELO Diff. by Pre Churn Lifetime Days\") +\n  labs(x = \"Pre Churn Lifetime Days\", y = \"Avg. Final ELO Diff.\") +\n  theme(legend.position=\"bottom\") +\n  theme(axis.text.x = element_text(size = 10, angle = 00))  \n\n#check does show that the final_elo_diff is positive \n#0.2598319\nmean(user_elo_decay_2_a$final_elo_diff)\n#even the overall, pre trimmed data set is slightly positive\n#0.24703\nmean(user_elo_decay$final_elo_diff, na.rm = TRUE)\n\n\n# Summary statistics \nuser_elo_decay_2_a %>% filter(dsa_quartiles == 1) %>% summary(final_mmr_diff)\nuser_elo_decay_2_a %>% filter(dsa_quartiles == 2) %>% summary(final_mmr_diff)\nuser_elo_decay_2_a %>% filter(dsa_quartiles == 3) %>% summary(final_mmr_diff)\nuser_elo_decay_2_a %>% filter(dsa_quartiles == 4) %>% summary(final_mmr_diff)\n\n# removing the users with 1 days since active and 1 pre churn lifetime days\nuser_elo_decay_2_b <- \n  user_elo_decay_2_a %>%  \n  filter(pre_churn_lifetime_days > 1,\n         days_since_active > 7) # 7 is the min, since churn is defined at 7 days\n\nhist(user_elo_decay_2_b$days_since_active, \n     breaks = seq(from = min(user_elo_decay_2_b$days_since_active),\n                   to = max(user_elo_decay_2_b$days_since_active),\n                   by = 1),\n     main = \"Cleaned Days Since Active\",\n     xlab = \"Days Since Active\")   \n\nhist(user_elo_decay_2_b$pre_churn_lifetime_days, \n     breaks = seq(from = min(user_elo_decay_2_b$pre_churn_lifetime_days),\n                   to = max(user_elo_decay_2_b$pre_churn_lifetime_days),\n                   by = 1),\n     main = \"Pre Churn Lifetime Days\",\n     xlab = \"Days Since Active\")\n\n#check that 2 is the min pre_churn_lifetime_days, it is \nmin(user_elo_decay_2_b$pre_churn_lifetime_days)\n#check that 8 is the min days_since_active, it is \nmin(user_elo_decay_2_b$days_since_active)\n\n#check bin count \nlength(unique(round(user_elo_decay_2_b$final_elo_diff)))\n\n#plot elo diff distributions by days since active dsa_quartiles \ng9 <- ggplot(user_elo_decay_2_b,\n             aes(x = final_elo_diff)) + \n  geom_histogram(aes(fill = ..count..),  # creates a gradient legend by relative counts \n                 bins = 55) + \n  facet_wrap(~ dsa_quartiles) + \n  ggtitle(expression(atop(\"Avg. ELO Diff. by Days Since Active Quartile\", \n                          atop(italic(\"For Users with 2 or More Prechurn Lifetime Days\"), \"\")))) \n\n#plot elo diff by days since active and pre churn lifetime days\n# g9 <- ggplot(user_elo_decay_2_b, \n#               aes(x = round(days_since_active),\n#                   y = round(pre_churn_lifetime_days),\n#                   color = round(final_elo_diff)\n#               ))\n# #create chart \n# g9 + geom_point(alpha = 0.05) + \n#   geom_smooth() +   \n#   facet_grid(. ~ dsa_quartiles,\n#              switch = 'x') +  \n#   ggtitle(\"Heros Owned By Minutes Played\") + \n#   labs(x = \"Heros Owned Count\", y = \"Minutes Played Count\") +\n#   theme(legend.position=\"bottom\") + \n#   theme(axis.text.x = element_text(size = 10, angle = 00)) \n\n#checks\nhead(user_elo_decay_2_a)\nstr(user_elo_decay_2_a) # 384486 obs. of  5 variables:\n\n# Single Explanatory Variable regression relationships \nfit1 <- lm(final_elo_diff ~ days_since_active,\n           data = user_elo_decay_2_a)\n\n# assess the model fit \nsummary(fit1) \nconfint(fit1, level=0.95) # CIs for model parameters, compare to the Estimate in Coefficients output \nanova(fit1) # anova table \nvcov(fit1) # covariance matrix for model parameters \n\n#scatterplot and the regression line\nplot(x = user_elo_decay_2_a$days_since_active, \n     y = user_elo_decay_2_a$final_elo_diff, \n     xlim=c(min(user_elo_decay_2_a$days_since_active)-5, max(user_elo_decay_2_a$days_since_active)+5), \n     ylim=c(min(user_elo_decay_2_a$final_elo_diff)-10, max(user_elo_decay_2_a$final_elo_diff)+10))\n    abline(fit1, lwd=2)\n\n#\nfit2 <- lm(final_elo_diff ~ pre_churn_lifetime_days,\n           data = user_elo_decay_2_a)\nsummary(fit2) \n  \n## how many stay the same, improve or get worse\n  ##using the trimmed (between -50, +50)\n#0.04405362  # 4% of reactivated users have no change (users can reactivate multiple times)\nuser_elo_decay_2_a %>% filter(final_elo_diff == 0) %>% summarise(count = n()) / dim(user_elo_decay_2_a)[1] \n#0.4884469  # 49% of reactivated users show an improvement \nuser_elo_decay_2_a %>% filter(final_elo_diff > 0) %>% summarise(count = n()) / dim(user_elo_decay_2_a)[1] \n#0.4674995  # 47% of reactivated users show a decline \nuser_elo_decay_2_a %>% filter(final_elo_diff < 0) %>% summarise(count = n()) / dim(user_elo_decay_2_a)[1] \n\n## how many stay the same, improve or get worse\n  ##using the trimmed (between -50, +50)\n#0.04405362  # 4% of reactivated users have no change (users can reactivate multiple times)\nuser_elo_decay_2_a %>% filter(final_elo_diff == 0) %>% summarise(count = n()) / dim(user_elo_decay_2_a)[1] \n#0.4884469  # 49% of reactivated users show an improvement \nuser_elo_decay_2_a %>% filter(final_elo_diff > 0) %>% summarise(count = n()) / dim(user_elo_decay_2_a)[1] \n#0.4674995  # 47% of reactivated users show a decline \nuser_elo_decay_2_a %>% filter(final_elo_diff < 0) %>% summarise(count = n()) / dim(user_elo_decay_2_a)[1] \n\n## how many stay the same, improve or get worse\n  ##using the trimmed (between -50, +50)\n  ## and removed all records w/ pre_churn_lifetime_days > 1 and days_since_active > 7\n#0.02891323  # 4% of reactivated users have no change (users can reactivate multiple times)\nuser_elo_decay_2_b %>% filter(final_elo_diff == 0) %>% summarise(count = n()) / dim(user_elo_decay_2_b)[1] \n#0.4969819  # 49% of reactivated users show an improvement \nuser_elo_decay_2_b %>% filter(final_elo_diff > 0) %>% summarise(count = n()) / dim(user_elo_decay_2_b)[1] \n#0.4741049  # 47% of reactivated users show a decline \nuser_elo_decay_2_b %>% filter(final_elo_diff < 0) %>% summarise(count = n()) / dim(user_elo_decay_2_b)[1] \n\n#the means of final_elo_diff in all stages of cleaning the data is positive \n#0.24703\nmean(user_elo_decay$final_elo_diff, na.rm = TRUE)\n#0.2598319\nmean(user_elo_decay_2$final_elo_diff) #this is the same as user_elo_decay_2_a (which added another field, but did not chagne final_elo_diff)\n#0.2648733\nmean(user_elo_decay_2_b$final_elo_diff)\n\n\n#round fianl elo diff & get percentages at each bucket \n  #data is from -50 to 50 range of final_elo_diff \nfinal_elo_diff_freq <-\nuser_elo_decay_2_a %>%  \n  select(account_id, final_elo_diff) %>% \n  transmute(account_id, final_elo_diff = as.integer(round(final_elo_diff,0))) %>% \n  group_by(final_elo_diff) %>% \n  summarise (n = n()) %>%\n  mutate(perc = n / sum(n)) \n\nfinal_elo_diff_freq <- as.data.frame(final_elo_diff_freq)\n\n\n\n\n\n",
    "created" : 1477678227992.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "302974336",
    "id" : "C80E733A",
    "lastKnownWriteTime" : 1478195034,
    "last_content_update" : 1478195034962,
    "path" : "~/Desktop/Redshift_Cron/R_Work/R_Projects/MMR Decay/elo_decay.R",
    "project_path" : "elo_decay.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}