{
    "collab_server" : "",
    "contents" : "---\ntitle: \"First_Spend\"\ndate: \"October 6, 2016\"\noutput: \n  html_document:\n    theme: readable \n    highlight: tango \n---\n  \n  ```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)\n```\n\n## {.tabset .tabset-pills}\n\n### Overview\n\nThis analysis looks at users' first spend and also segments daily spenders as being new or existing users. This was done to get a better sense of how specific events drive new conversion as well as to get a sense of what IAP sku new spenders buy and what in-game items they purchase with their ICE.\n\n**Questions**: \n\n* _For daily spenders, how many are new vs existing spenders?_  \n* _For new spenders,_ \n+ _What is their first IAP purchase?_\n+ _What is their first ICE item purchase?_\n+ _If it is hero or skin, is there a dominant hero or skin?_\n\n**Methodology**: \nFirst each users' first spend datetime was determined based on their minimum timestamp in the IAP Complete table. This process created the `first_spend_date` table. Each user in the the `first_spend_date` was then joined back to the IAP Complete table using the timestamp of their first purchase to determine what their first IAP sku purchase was. This data was then used to create an overall and daily breakdown of first IAP sku purchases. \n\nNext the users in the `first_spend_date` table were joined into the IAP Complete table to enable the classification of daily spenders as being new or existing. This was done with the following conditions: \n  \n  * __Spender Classification Conditions__: \n  + **New Spender**: when a users' spend date equals a users' first spend date (from the `first_spend_date` table), then the user is a new spender.\n\n+ **Existing Spender**: when a users' spend date does not equal a users' first spend date (from the `first_spend_date` table), then the user is a new spender.\n\nPlease see the following pages for the findings.   \nThis report was last updataed at `r Sys.time()`\n\n```{r, message=FALSE, results='hide'} \nsource(\"helpers.R\")\nsource(\"First_Spend_DY.R\")\n```\n\n### Daily Spender Status\n\n**Question**: \n  \n  * _For daily spenders, how many are new vs existing spenders?_\n\n**Finding**:\n  \n  * On average, \n+ 60% of spenders are existing \n+ 40% of sepdners are new \n\n\n```{r fig.width=4, fig.height=2, fig.align='center', out.extra='style=\"float:left\"'}\nkable(first_spend_status_daily_avg_percents, \n      format = \"html\",\n      caption = \"LTD Daily Avg. Spenders by Spender Status\")\n```          \n\n```{r fig.width=9, fig.height=4}\ndygraph(first_spend_status_daily_percent_combinedSeries, main = \"Percent of Daily Spenders by Status\") %>%\n  dySeries(\"new_spender\", label = \"New Spender\", col = \"red\") %>%\n  dySeries(\"existing_spender\", label = \"Existing Spender\", col = \"blue\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"Percent\")\n```\n\n```{r fig.width=9, fig.height=4}\ndygraph(first_spend_status_daily_count_combinedSeries, main = \"Count of Daily Spenders by Status\") %>%\n  dySeries(\"new_spender\", label = \"New Spender\", col = \"red\") %>%\n  dySeries(\"existing_spender\", label = \"Existing Spender\", col = \"blue\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"Percent\")\n```\n\n\n### First IAP\n\n**Question**: \n  \n  * _For new spenders,_ \n+ _What is their first IAP purchase?_\n\nTo create the distribution, each users' first IAP sku purchase was determined, then users were grouped by their first IAP sku purchase.\n\n**Finding**:\n\n* The 'Medium', 'Large' and 'Small' are by far the most frequently purchased first IAp skus\n\nPlease refer to the table below for their percent of first IAP sku purchases:    \n\n\n```{r fig.width=4, fig.height=2, fig.align='center', out.extra='style=\"float:left\"'}\nkable(first_spend_IAP_top_3, \nformat = \"html\",\ncaption = \"Top 3 First Spender IAP Sku Percents LTD\")\n```       \n\n\n```{r fig.width=9, fig.height=6, out.extra='style=\"float:left\"'}\ng_first_spend_IAP + \ngeom_bar(stat = \"identity\") + \nggtitle(\"First Spend IAP Distribution\") + \nlabs(x = \"IAPs Purchased\", y = \"First Spender Count by IAPs Purchased\") +\ntheme(legend.position=\"hidden\") + \ntheme(axis.text.x = element_text(size = 10, angle = 90)) + \ngeom_text(aes(label=first_spender_count)\n, vjust=-0.5, colour=\"black\") + \nscale_y_continuous(label = si_notation) \n```\n\n\n### Daily First IAP\n\n**Question**: \n\n* _For new spenders,_ \n+ _What is the trend of first IAP purchases?_\n\nTo get a sense of the chages in first IAP sku purchases over time, first time spenders were counted grouping by frst spend date and first IAP sku purchase. Please refer to the TWO charts below for percents and count distributions. \n\n**Finding**: \n\n* Historically, the daily distribution of IAP shews was pretty similar to the LTD totals presented on the previous tab\n+ the share of `2xlarge` and `large` IAPs have increased since experimentation with pricing changes in early August\n+ `mini_iceandkey` spiked on 9/15, accounting for 61% of first spender IAP skus\n\n\n```{r fig.width=9, fig.height=5, out.extra='style=\"float:left\"'}\ndygraph(first_spend_IAP_daily_percent_DY, main = \"Daily First Spend IAP Distribution Percents\") %>%\n  # always put the data with the most NA's at the top, this ensures the Y-axis starts at 0\n  dySeries(\"small_twiceice\", label = \"small_twiceice\") %>%\n  dySeries(\"mini_iceandkey\", label = \"mini_iceandkey\") %>%\n  dySeries(\"mini\", label = \"mini\") %>%\n  dySeries(\"small\", label = \"small\") %>%\n  dySeries(\"medium\", label = \"medium\") %>%\n  dySeries(\"large\", label = \"large\") %>%\n  dySeries(\"xlarge\", label = \"xlarge\") %>%\n  dySeries(\"2xlarge\", label = \"2xlarge\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First Spender Percents by IAPs Purchased\",\n         valueRange = c(0,115)) %>%\n  dyAxis(\"x\", label = \"IAPs Purchased\") \n```\n<br>\n\n```{r fig.width=9, fig.height=5}\ndygraph(first_spend_IAP_daily_DY, main = \"Daily First Spend IAP Distribution\") %>%\n  # always put the data with the most NA's at the top, this ensures the Y-axis starts at 0\n  dySeries(\"small_twiceice\", label = \"small_twiceice\") %>%\n  dySeries(\"mini_iceandkey\", label = \"mini_iceandkey\") %>%\n  dySeries(\"mini\", label = \"mini\") %>%\n  dySeries(\"small\", label = \"small\") %>%\n  dySeries(\"medium\", label = \"medium\") %>%\n  dySeries(\"large\", label = \"large\") %>%\n  dySeries(\"xlarge\", label = \"xlarge\") %>%\n  dySeries(\"2xlarge\", label = \"2xlarge\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First Spender Count by IAPs Purchased\") %>%\n  dyAxis(\"x\", label = \"IAPs Purchased\")\n```\n\n\n### First ICE Item\n\n**Question**: \n\n* _For new spenders,_ \n+ _What is their first ICE item purchase?_\n\n**Finding**: \n\n* Since June, the most frequent first ICE purchase for New IAP Spenders have been: \n+ 22K BR Casual Rerolls \n+ 19K Boxes     \n+ 16K Heros \n* But as the second and third charts below show, the daily trend is changing.\n\n\n```{r fig.width=9, fig.height=5.5}\ng_first_spender_first_ice_sink + \ngeom_bar(stat = \"identity\") + \nggtitle(\"First Spender's First ICE Sink (Post Spend)\") + \nlabs(x = \"IAPs Purchased\", y = \"First Spender Count by ICE Sink\") +\ntheme(legend.position=\"hidden\") + \ntheme(axis.text.x = element_text(size = 10, angle = 90)) + \ngeom_text(aes(label=first_spender_count)\n, vjust=-0.5, colour=\"black\") + \nscale_y_continuous(label = si_notation) \n```\n\n\n### Daily First ICE Item\n\n**Question**: \n\n* _For new spenders,_ \n+ _What is the trend of first ICE purchases?_\n\n**Finding**: \n\n* Since the start of the month, there have been declines in: \n+ BR Casual Rerolls \n+ Skins  \n+ Boosts \n* While there have been increases in:     \n+ Seasonal Keys \n+ Boxes  \n\n\nPlease refer to the TWO charts below for percents and count distributions. \n\n```{r fig.width=9, fig.height=4}\ndygraph(first_spender_first_ice_sink_daily_percent_combinedSeries,\n        main = \"First Spender's First Ice Sink Percents (Post Spend)\") %>%\n  dySeries(\"hero\", label = \"hero\", color = \"purple\") %>%\n  dySeries(\"boost\", label = \"boost\", color = \"blue\") %>%\n  dySeries(\"box\", label = \"box\", color = \"green\") %>%\n  #dySeries(\"seasonKey\", label = \"seasonKey\") %>% #including this line of \n  #code creates white space, commenting it out somehow includes seasonkey in   #chart \n  dySeries(\"casual_aral_reroll\", label = \"casual_aral_reroll\", color = \"orange\") %>%\n  dySeries(\"skin\", label = \"skin\", color = \"red\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First ICE Sink Percents\", valueRange = c(0,110)) %>% \n  dyAxis(\"x\", label = \"Event Dates\")\n```\n\n```{r fig.width=9, fig.height=4}\ndygraph(first_spender_first_ice_sink_daily_combinedSeries,\n        main = \"First Spender's First Ice Sink (Post Spend)\") %>%\n  dySeries(\"skin\", label = \"skin\") %>%\n  dySeries(\"boost\", label = \"New boost\") %>%\n  dySeries(\"box\", label = \"box\") %>%\n  dySeries(\"casual_aral_reroll\", label = \"casual_aral_reroll\") %>%\n  #dySeries(\"seasonKey\", label = \"seasonKey\") %>%  #including this line of \n  #code creates white space, commenting it out somehow includes seasonkey in   #chart \n  dySeries(\"hero\", label = \"hero\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First ICE Item Counts (Post 1st IAP Spend)\") %>% \n  dyAxis(\"x\", label = \"First ICE Sink Date (Post 1st IAP Spend)\")\n```\n\n",
    "created" : 1476396356229.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2777962984",
    "id" : "FF522246",
    "lastKnownWriteTime" : 1476077161,
    "last_content_update" : 1476077161,
    "path" : "~/Documents/R_Projects/First_Spend/First.Spend.DY.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}