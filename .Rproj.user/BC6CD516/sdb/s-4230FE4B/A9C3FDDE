{
    "collab_server" : "",
    "contents" : "\n# First Spender Analysis\n\n##============================================  \n## Loading libraries and connecting to Redshift \n##============================================\n\nlibrary (RPostgreSQL)\nlibrary(data.table)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggvis)\nlibrary(scales)\nlibrary(knitr)\nlibrary(formattable)\nlibrary(xts)  # added for XTS objects \nlibrary(dygraphs)\n\ndriver <- dbDriver(\"PostgreSQL\") \nconn <- dbConnect(driver, host=\"superevilmegacorp.redshift.amplitude.com\",\n                  port=\"5439\",\n                  dbname=\"superevilmegacorp\",\n                  user=\"superevilmegacorp\",\n                  password=\"GQdPSadICW2lL5qCkS20U9Jk\")\n\n##============================================  \n## Overall First Spender counts by IAP  table (g_first_spend_IAP)\n##============================================\n\nsql_first_spend_IAP <- \n  \"Select \ncase when e_productid = 'com.superevilmegacorp.vg.bundle.small.twiceice201608' then 'small_twiceice'\nwhen e_productid = 'com.superevilmegacorp.vg.bundle.mini.iceandkey201609' then 'mini_iceandkey'     \nwhen e_productid = 'com.superevilmegacorp.vg.gold.mini' then 'mini'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.small' then 'small'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.medium' then 'medium'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.large' then 'large'     \nwhen e_productid = 'com.superevilmegacorp.vg.gold.xlarge' then 'xlarge'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.2xlarge' then '2xlarge'\nelse e_productid\nend productid\n,count(distinct amplitude_id) first_spender_count\nFrom first_spend_date  \nGroup By 1\"\n\nfirst_spend_IAP <- dbGetQuery(conn, paste(\"SET search_path = app139203;\",sql_first_spend_IAP, sep = \"\"))\n\n#exmple of sorting by values \n#x$name <- factor(x$name, levels = x$name[order(x$val)])\n#this was rutruning null... so sorted when creating the chart \n#first_spend_IAP$e_productid <- factor(first_spend_IAP$productid, \n#                                      levels = first_spend_IAP$productid[\n#                                        order(first_spend_IAP$first_spender_count)])\n\n#first_spend_IAP$e_productid[order(first_spend_IAP$first_spender_count)]\n\n#make plot object \n#sort the product id based on the first spender count \ng_first_spend_IAP <- ggplot(first_spend_IAP, \n                            aes(x = reorder(productid, -first_spender_count), \n                                y = first_spender_count,\n                                fill = productid\n                            ))\n#create chart \ng_first_spend_IAP + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"First Spend IAP Distribution\") + \n  labs(x = \"IAPs Purchased\", y = \"First Spender Count by IAPs Purchased\") +\n  theme(legend.position=\"hidden\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) + \n  geom_text(aes(label=first_spender_count)\n            , vjust=-0.5, colour=\"black\") + \n  scale_y_continuous(label = si_notation) \n\n\n##============================================  \n## Daily First Spender counts by IAP  table (g_first_spend_IAP_daily)\n##============================================\n\nsql_first_spend_IAP_daily <- \n  \"Select \nfirst_spend_date\n,case when e_productid = 'com.superevilmegacorp.vg.bundle.small.twiceice201608' then 'small_twiceice'\nwhen e_productid = 'com.superevilmegacorp.vg.bundle.mini.iceandkey201609' then 'mini_iceandkey'     \nwhen e_productid = 'com.superevilmegacorp.vg.gold.mini' then 'mini'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.small' then 'small'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.medium' then 'medium'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.large' then 'large'     \nwhen e_productid = 'com.superevilmegacorp.vg.gold.xlarge' then 'xlarge'\nwhen e_productid = 'com.superevilmegacorp.vg.gold.2xlarge' then '2xlarge'\nelse e_productid\nend productid\n,count(distinct amplitude_id) first_spender_count\nFrom first_spend_date  \nGroup By 1,2\" \n\nfirst_spend_IAP_daily <- dbGetQuery(conn, paste(\"SET search_path = app139203;\",sql_first_spend_IAP_daily, sep = \"\"))\n\n#sort descending by the spender count \nfirst_spend_IAP_daily <- arrange(first_spend_IAP_daily, first_spend_date, productid)\n\n#make stacked bar chart  \n#sort the product id based on the first spender count \ng_first_spend_IAP_daily <- ggplot(first_spend_IAP_daily, \n                                  aes(x = first_spend_date, \n                                      y = first_spender_count,\n                                      fill = productid\n                                  ))\n#create chart \ng_first_spend_IAP_daily + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"Daily First Spend IAP Distribution\") + \n  labs(x = \"IAPs Purchased\", y = \"First Spender Count by IAPs Purchased\") +\n  theme(legend.position=\"bottom\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) + \n  scale_y_continuous(label = si_notation) \n\nhead(first_spend_IAP_daily)\n\n#create new dataframe with a percentage colum\nfirst_spend_IAP_daily_percent = ddply(first_spend_IAP_daily, \n                                      \"first_spend_date\", \n                                      mutate, \n                                      first_spender_percent = first_spender_count/sum(first_spender_count) * 100)\n\n#check change \nhead(first_spend_IAP_daily_percent)\n\n#make plot object \n#sort the product id based on the first spender count \ng_first_spend_IAP_daily_percent <- ggplot(first_spend_IAP_daily_percent, \n                                          aes(x = first_spend_date, \n                                              y = first_spender_percent,\n                                              fill = productid\n                                          ))\n#create a 100% stacked bar chart \ng_first_spend_IAP_daily_percent + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"Daily First Spend IAP Distribution Percents\") + \n  labs(x = \"IAPs Purchased\", y = \"First Spender Percents by IAPs Purchased\") +\n  theme(legend.position=\"bottom\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) \n#scale_y_continuous(labels = scales::percent)\n\n##============================================  \n## Daily Avg. Percentage for First IAP sku purchases (g_first_spend_IAP)\n##============================================\n\n#transpose data\nfirst_spend_IAP_daily_pivot <- dcast(first_spend_IAP_daily, \n                                     first_spend_date~productid, value.var=\"first_spender_count\")\n\n#check data \nhead(first_spend_IAP_daily_pivot) \ndim(first_spend_IAP_daily_pivot)\n\n#convert NA to zero \nfirst_spend_IAP_daily_pivot[is.na(first_spend_IAP_daily_pivot)] <- 0\n\n#create a total column \nfirst_spend_IAP_daily_pivot <- first_spend_IAP_daily_pivot %>% mutate(total = rowSums(.[2:9]))\n\n#get field names \ncolnames(first_spend_IAP_daily_pivot) \nstr(first_spend_IAP_daily_pivot)\n\n#calculate percents \nfirst_spend_IAP_daily_pivot_percents <- \n  transmute(first_spend_IAP_daily_pivot, \n            two_xlarge_percent = `2xlarge` / total,\n            large_percent = large / total,\n            medium_percent = medium / total,\n            mini_percent = mini / total,         \n            mini_iceandkey_percent = mini_iceandkey / total,\n            small_percent = small / total,\n            small_twiceice_percent = small_twiceice / total,\n            xlarge_percent = xlarge / total\n  )\n\nhead(first_spend_IAP_daily_pivot_percents)\n\n#calculate AVERGAGE percents\nfirst_spend_IAP_daily_avg_percents <- \n  transmute(first_spend_IAP_daily_pivot_percents, \n            avg_two_xlarge_percent = mean(two_xlarge_percent),\n            avg_large_percent = mean(large_percent),\n            avg_medium_percent = mean(medium_percent),\n            avg_mini_percent = mean(mini_percent),\n            avg_mini_iceandkey_percent = mean(mini_iceandkey_percent),\n            avg_small_percent = mean(small_percent),\n            avg_small_twiceice_percent = mean(small_twiceice_percent),\n            avg_xlarge_percent = mean(xlarge_percent)\n  )\n\n#remove extra, repeating rows \nfirst_spend_IAP_daily_avg_percents <- first_spend_IAP_daily_avg_percents[1:1,] \n#sort avg ltd percents \nfirst_spend_IAP_daily_avg_percents <- sort(first_spend_IAP_daily_avg_percents, decreasing=TRUE)\n#transpose rows to columns \nfirst_spend_IAP_daily_avg_percents <- as.data.frame(t(first_spend_IAP_daily_avg_percents))\n#get top 3 \nfirst_spend_IAP_top_3 <- head(first_spend_IAP_daily_avg_percents, n=3)\n#name top 3 avg percent col\ncolnames(first_spend_IAP_top_3)[1] <- \"ltd_avg_percent\"\n\n#use formattable to get percentages \n#top_3_percents <- percent(first_spend_IAP_top_3$ltd_avg_percent, format = \"d\")\n#get row names \n#top_3_labels <- row.names(first_spend_IAP_top_3)\n#first_spend_IAP_top_3 <- cbind(top_3_labels, top_3_percents)\n\n#make nice table \nkable(first_spend_IAP_top_3)\n\n\n##============================================  \n## Daily First Spender counts by IAP  table (g_first_spend_status_daily)\n##============================================\n\nsql_first_spend_status_daily <- \n  \"Select \nevent_date\n,new_spender_status\n,count(distinct amplitude_id) spender_count\nFrom (Select \na.amplitude_id \n,date(a.event_time) as event_date \n,b.first_spend_date \n,case when date(a.event_time) = b.first_spend_date then 'new spender' \nwhen (date(a.event_time) <> b.first_spend_date or b.first_spend_date is null) then 'existing spender' \nelse 'other' \nend new_spender_status \nFrom monetization_iap_complete a\nLeft Join first_spend_date b\non a.amplitude_id = b.amplitude_id    \nWhere date(a.event_time) >= '2016-01-25'             \nGroup By 1,2,3,4\n) a         \nGroup By 1,2\" \n\nfirst_spend_status_daily <- dbGetQuery(conn, paste(\"SET search_path = app139203;\",sql_first_spend_status_daily, sep = \"\"))\n\n#sort descending by the spender count \nfirst_spend_status_daily <- arrange(first_spend_status_daily, event_date, new_spender_status)\n\n#make plot object \n#sort the product id based on the first spender count \ng_first_spend_status_daily <- ggplot(first_spend_status_daily, \n                                     aes(x = event_date, \n                                         y = spender_count,\n                                         fill = new_spender_status\n                                     ))\n#create chart \ng_first_spend_status_daily + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"Daily First Spend IAP Distribution\") + \n  labs(x = \"IAPs Purchased\", y = \"Spender Count by New Spender Status\") +\n  theme(legend.position=\"bottom\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) + \n  scale_y_continuous(label = si_notation) \n\n\nhead(first_spend_status_daily)\n\nfirst_spend_status_daily_pivot <- dcast(first_spend_status_daily, \n                                        event_date~new_spender_status, value.var=\"spender_count\")\n\n#check data \nhead(first_spend_status_daily_pivot) \ndim(first_spend_status_daily_pivot)\n\n#create a total column \nfirst_spend_status_daily_pivot <- first_spend_status_daily_pivot %>% mutate(total = rowSums(.[2:3]))\n\n#get field names \ncolnames(first_spend_IAP_daily_pivot) \nstr(first_spend_IAP_daily_pivot)\n\n#calculate percents \nfirst_spend_status_daily_pivot_percents <- \n  transmute(first_spend_status_daily_pivot, \n            existing_spender_percent = `existing spender` / total,\n            new_spender_percent = `new spender` / total\n  )\n\nhead(first_spend_status_daily_pivot_percents)\n\n#calculate AVERGAGE percents\nfirst_spend_status_daily_avg_percents <- \n  transmute(first_spend_status_daily_pivot_percents, \n            avg_existing_spender_percent = mean(existing_spender_percent),\n            avg_new_spender_percent = mean(new_spender_percent)          \n  )\n\nhead(first_spend_status_daily_avg_percents)\n\n#remove extra, repeating rows \nfirst_spend_status_daily_avg_percents <- first_spend_status_daily_avg_percents[1:1,] \n#sort avg ltd percents \nfirst_spend_status_daily_avg_percents <- sort(first_spend_status_daily_avg_percents, decreasing=TRUE)\n#transpose rows to columns \nfirst_spend_status_daily_avg_percents <- as.data.frame(t(first_spend_status_daily_avg_percents))\n\n#make final table \nkable(first_spend_status_daily_avg_percents)\n\n##create 100% stacked bar chart of spenders by status \n\nhead(first_spend_status_daily)\n\n#create new dataframe with a percentage colum\nfirst_spend_status_daily_percent = ddply(first_spend_status_daily, \n                                         \"event_date\", \n                                         mutate, \n                                         new_spender_status_percent = spender_count/sum(spender_count) * 100)\n\n#check change \nhead(first_spend_status_daily_percent)\n\n#make plot object \n#sort the product id based on the first spender count \ng_first_spend_status_daily_percent <- ggplot(first_spend_status_daily_percent, \n                                             aes(x = event_date, \n                                                 y = new_spender_status_percent,\n                                                 fill = new_spender_status\n                                             ))\n#create a 100% stacked bar chart \ng_first_spend_status_daily_percent + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"Percent of Daily Spenders by Status\") + \n  labs(x = \"Event Dates\", y = \"First v. Existing Spender Percents\") +\n  theme(legend.position=\"bottom\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) +\n  scale_y_continuous(labels = )\n\n\n# first_spend_status_daily_percent$event_date <- as.POSIXct(first_spend_status_daily_percent$event_date, tz = \"GMT\") \n\n# ggvis(first_spend_status_daily_percent, \n#       x = ~event_date, \n#       y = ~new_spender_status_percent,\n#       fill = ~new_spender_status) %>% \n#      group_by(new_spender_status) %>% \n#      layer_bars() %>% \n#      scale_datetime(\"x\", nice = \"day\")\n\n\n##============================================  \n## First ICE Item Type Sink for New IAP Spenders (g_first_spend_status_daily)\n##============================================\n\nsql_first_spender_first_ice_sink <- \n  \"Select \nfirst_ice_item  \n,count(distinct amplitude_id) first_spender_count \nFrom first_spender_first_ice_sink\nGroup By 1\n\" \n\nfirst_spend_status_daily <- dbGetQuery(conn, paste(\"SET search_path = app139203;\",sql_first_spender_first_ice_sink, sep = \"\"))\n\ng_first_spender_first_ice_sink <- ggplot(first_spend_status_daily, \n                                         aes(x = reorder(first_ice_item, -first_spender_count), \n                                             y = first_spender_count,\n                                             fill = first_ice_item\n                                         ))\n#create chart \ng_first_spender_first_ice_sink + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"First Spender's First ICE Sink (Post Spend)\") + \n  labs(x = \"IAPs Purchased\", y = \"First Spender Count by ICE Sink\") +\n  theme(legend.position=\"hidden\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) + \n  geom_text(aes(label=first_spender_count)\n            , vjust=-0.5, colour=\"black\") + \n  scale_y_continuous(label = si_notation) \n\n\n##============================================  \n## Daily First ICE Item Type Sink for New IAP Spenders (g_first_spend_status_daily)\n##============================================\n\nsql_first_spender_first_ice_sink_daily <- \n  \"Select \ndate(first_ice_sink_time) as first_ice_sink_date\n,first_ice_item  \n,count(distinct amplitude_id) first_spender_count \nFrom first_spender_first_ice_sink\nGroup By 1,2\n\" \n\nfirst_spender_first_ice_sink_daily <- dbGetQuery(conn, paste(\"SET search_path = app139203;\",sql_first_spender_first_ice_sink_daily, sep = \"\"))\n\nfirst_spender_first_ice_sink_daily <- arrange(first_spender_first_ice_sink_daily, first_ice_sink_date, first_ice_item)\n\ng_first_spender_first_ice_sink_daily <- ggplot(first_spender_first_ice_sink_daily, \n                                               aes(x = first_ice_sink_date, \n                                                   y = first_spender_count,\n                                                   fill = first_ice_item\n                                               ))\n#create chart \ng_first_spender_first_ice_sink_daily + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"First Spender's First ICE Sink (Post Spend)\") + \n  labs(x = \"First ICE Sink Date (Post 1st IAP Spend)\",\n       y = \"First ICE Item Counts (Post 1st IAP Spend)\") +\n  theme(legend.position=\"hidden\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) + \n  scale_y_continuous(label = si_notation) \n\n##get daily percents and 100% stacked chart \n\n#pivot \nfirst_spender_first_ice_sink_daily_pivot <- dcast(first_spender_first_ice_sink_daily, \n                                                  first_ice_sink_date~first_ice_item, value.var=\"first_spender_count\")\n\n#check data \nhead(first_spender_first_ice_sink_daily_pivot) \nstr(first_spender_first_ice_sink_daily_pivot)\n\n#create a total column \nfirst_spender_first_ice_sink_daily_pivot <- first_spender_first_ice_sink_daily_pivot %>% mutate(total = rowSums(.[2:7]))\n\n#get field names \ncolnames(first_spender_first_ice_sink_daily_pivot) \nstr(first_spender_first_ice_sink_daily_pivot)\n\n#calculate percents \nfirst_spender_first_ice_sink_daily_pivot_percents <- \n  transmute(first_spender_first_ice_sink_daily_pivot, \n            boost_p = boost / total,\n            box_p = box / total,\n            casual_aral_reroll_p = casual_aral_reroll / total,\n            hero_p = hero / total,\n            seasonKey_p = seasonKey / total,        \n            skin_p = skin / total\n  )\n\nhead(first_spender_first_ice_sink_daily_pivot_percents)\n\n#calculate AVERGAGE percents\nfirst_spender_first_ice_sink_daily_avg_percents <- \n  transmute(first_spender_first_ice_sink_daily_pivot_percents, \n            avg_boost = mean(boost_p), \n            avg_box = mean(box_p), \n            avg_casual_aral_reroll = mean(casual_aral_reroll_p), \n            avg_hero = mean(hero_p), \n            avg_seasonKey = mean(seasonKey_p), \n            avg_skin = mean(skin_p) \n  ) \n\nhead(first_spender_first_ice_sink_daily_avg_percents)\n\n#remove extra, repeating rows \nfirst_spender_first_ice_sink_daily_avg_percents <- first_spender_first_ice_sink_daily_avg_percents[1:1,] \n#sort avg ltd percents \nfirst_spender_first_ice_sink_daily_avg_percents <- sort(first_spender_first_ice_sink_daily_avg_percents, decreasing=TRUE)\n#transpose rows to columns \nfirst_spender_first_ice_sink_daily_avg_percents <- as.data.frame(t(first_spender_first_ice_sink_daily_avg_percents))\n\n#make final table \nkable(first_spender_first_ice_sink_daily_avg_percents)\n\n##create 100% stacked bar chart of spenders by status \n\nhead(first_spender_first_ice_sink_daily)  \n\n#create new dataframe with a percentage colum\nfirst_spender_first_ice_sink_daily_percent = ddply(first_spender_first_ice_sink_daily, \n                                                   \"first_ice_sink_date\", \n                                                   mutate, \n                                                   first_ice_item_percent = first_spender_count/sum(first_spender_count) * 100)\n\n#check change \nhead(first_spender_first_ice_sink_daily_percent)\n\n#make plot object \n#sort the product id based on the first spender count \ng_first_spender_first_ice_sink_daily_percent <- ggplot(first_spender_first_ice_sink_daily_percent, \n                                                       aes(x = first_ice_sink_date, \n                                                           y = first_ice_item_percent,\n                                                           fill = first_ice_item\n                                                       ))\n#create a 100% stacked bar chart \ng_first_spender_first_ice_sink_daily_percent + \n  geom_bar(stat = \"identity\") + \n  ggtitle(\"First Spender's First ICE Sink Percents (Post 1st IAP)\") + \n  xlab(\"First ICE Sink Date (Post 1st IAP Spend)\") + \n  ylab(\"First ICE Item Percents (Post 1st IAP Spend)\") +\n  theme(legend.position=\"bottom\") + \n  theme(axis.text.x = element_text(size = 10, angle = 90)) \n#scale_y_continuous(labels = scales::percent)\n\n##===================\n## Dygraphs: Percent of Daily Spenders by Status \n##===================  \n# make data table \nfirst_spend_status_daily_percent <- data.table(first_spend_status_daily_percent)\n\n# Create two new datasets to create subsets \nfirst_spend_status_daily_percent_existing_spender <- first_spend_status_daily_percent[new_spender_status == \"existing spender\"]\nfirst_spend_status_daily_percent_new_spender <- first_spend_status_daily_percent[new_spender_status == \"new spender\"]\n\n# Subset the two datasets \nfirst_spend_status_daily_percent_existing_spender <- subset(first_spend_status_daily_percent_existing_spender, select = c(\"event_date\", \"new_spender_status_percent\"))\nfirst_spend_status_daily_percent_new_spender <- subset(first_spend_status_daily_percent_new_spender, select = c(\"event_date\", \"new_spender_status_percent\"))\n\n## Create dygraph with two time series \n# Make two TS objects out of the two subsets using the xts function \nfirst_spend_status_daily_percent_existing_spender <- xts(first_spend_status_daily_percent_existing_spender$new_spender_status_percent, \n                                                         order.by = first_spend_status_daily_percent_existing_spender$event_date)\nfirst_spend_status_daily_percent_new_spender <- xts(first_spend_status_daily_percent_new_spender$new_spender_status_percent, \n                                                    order.by = first_spend_status_daily_percent_new_spender$event_date)\n\n# combine xts objects and re-name columns \nfirst_spend_status_daily_percent_combinedSeries <- cbind(first_spend_status_daily_percent_existing_spender,\n                                                         first_spend_status_daily_percent_new_spender)\ncolnames(first_spend_status_daily_percent_combinedSeries) = c(\"existing_spender\",\n                                                              \"new_spender\")\n# Plot graph\ndygraph(first_spend_status_daily_percent_combinedSeries, main = \"Percent of Daily Spenders by Status\") %>%\n  dySeries(\"new_spender\", label = \"New Spender\", col = \"red\") %>%\n  dySeries(\"existing_spender\", label = \"Existing Spender\", col = \"blue\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"Percent\")\n\n\n##===================\n## Dygraphs: Count of Daily Spenders by Status \n##===================  \n# make data table \nfirst_spend_status_daily_percent <- data.table(first_spend_status_daily_percent)\n\n# Create two new datasets to create subsets \nfirst_spend_status_daily_count_existing_spender <- first_spend_status_daily_percent[new_spender_status == \"existing spender\"]\nfirst_spend_status_daily_count_new_spender <- first_spend_status_daily_percent[new_spender_status == \"new spender\"]\n\n# Subset the two datasets \nfirst_spend_status_daily_count_existing_spender <- subset(first_spend_status_daily_count_existing_spender, select = c(\"event_date\", \"spender_count\"))\nfirst_spend_status_daily_count_new_spender <- subset(first_spend_status_daily_count_new_spender, select = c(\"event_date\", \"spender_count\"))\n\n# Make two TS objects out of the two subsets using the xts function \nfirst_spend_status_daily_count_existing_spender <- xts(first_spend_status_daily_count_existing_spender$spender_count, \n                                                         order.by = first_spend_status_daily_count_existing_spender$event_date)\nfirst_spend_status_daily_count_new_spender <- xts(first_spend_status_daily_count_new_spender$spender_count, \n                                                    order.by = first_spend_status_daily_count_new_spender$event_date)\n\n# combine xts objects and re-name columns \nfirst_spend_status_daily_count_combinedSeries <- cbind(first_spend_status_daily_count_existing_spender,\n                                                         first_spend_status_daily_count_new_spender)\ncolnames(first_spend_status_daily_count_combinedSeries) = c(\"existing_spender\",\n                                                              \"new_spender\")\n# Plot graph\ndygraph(first_spend_status_daily_count_combinedSeries, main = \"Count of Daily Spenders by Status\") %>%\n  dySeries(\"new_spender\", label = \"New Spender\", col = \"red\") %>%\n  dySeries(\"existing_spender\", label = \"Existing Spender\", col = \"blue\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"Percent\")\n\n##================\n## Dygraphs: Daily First Spend IAP Distribution\n##================\nfirst_spend_IAP_daily <- data.table(first_spend_IAP_daily)\n\n# Create new datasets for subsetting \nfirst_spend_IAP_daily_2xlarge <- first_spend_IAP_daily[productid == \"2xlarge\"]\nfirst_spend_IAP_daily_xlarge <- first_spend_IAP_daily[productid == \"xlarge\"]\nfirst_spend_IAP_daily_large <- first_spend_IAP_daily[productid == \"large\"]\nfirst_spend_IAP_daily_medium <- first_spend_IAP_daily[productid == \"medium\"]\nfirst_spend_IAP_daily_small <- first_spend_IAP_daily[productid == \"small\"]\nfirst_spend_IAP_daily_mini <- first_spend_IAP_daily[productid == \"mini\"]\nfirst_spend_IAP_daily_mini_iceandkey <- first_spend_IAP_daily[productid == \"mini_iceandkey\"]\nfirst_spend_IAP_daily_small_twiceice <- first_spend_IAP_daily[productid == \"small_twiceice\"]\n\n# Create subsets \nfirst_spend_IAP_daily_2xlarge <- subset(first_spend_IAP_daily_2xlarge, select = c(\"first_spend_date\", \"first_spender_count\"))\nfirst_spend_IAP_daily_xlarge <- subset(first_spend_IAP_daily_xlarge, select = c(\"first_spend_date\", \"first_spender_count\"))\nfirst_spend_IAP_daily_large <- subset(first_spend_IAP_daily_large, select = c(\"first_spend_date\", \"first_spender_count\"))\nfirst_spend_IAP_daily_medium <- subset(first_spend_IAP_daily_medium, select = c(\"first_spend_date\", \"first_spender_count\"))\nfirst_spend_IAP_daily_small <- subset(first_spend_IAP_daily_small, select = c(\"first_spend_date\", \"first_spender_count\"))\nfirst_spend_IAP_daily_mini <- subset(first_spend_IAP_daily_mini, select = c(\"first_spend_date\", \"first_spender_count\"))\nfirst_spend_IAP_daily_mini_iceandkey <- subset(first_spend_IAP_daily_mini_iceandkey, select = c(\"first_spend_date\", \"first_spender_count\"))\nfirst_spend_IAP_daily_small_twiceice <- subset(first_spend_IAP_daily_small_twiceice, select = c(\"first_spend_date\", \"first_spender_count\"))\n\n# Create XTS Objects \nfirst_spend_IAP_daily_2xlarge <- xts(first_spend_IAP_daily_2xlarge$first_spender_count,\n                                     order.by = first_spend_IAP_daily_2xlarge$first_spend_date)\nfirst_spend_IAP_daily_xlarge <- xts(first_spend_IAP_daily_xlarge$first_spender_count,\n                                    order.by = first_spend_IAP_daily_xlarge$first_spend_date)\nfirst_spend_IAP_daily_large <- xts(first_spend_IAP_daily_large$first_spender_count,\n                                   order.by = first_spend_IAP_daily_large$first_spend_date)\nfirst_spend_IAP_daily_medium <- xts(first_spend_IAP_daily_medium$first_spender_count,\n                                    order.by = first_spend_IAP_daily_medium$first_spend_date)\nfirst_spend_IAP_daily_small <- xts(first_spend_IAP_daily_small$first_spender_count,\n                                   order.by = first_spend_IAP_daily_small$first_spend_date)\nfirst_spend_IAP_daily_mini <- xts(first_spend_IAP_daily_mini$first_spender_count,\n                                  order.by = first_spend_IAP_daily_mini$first_spend_date)\nfirst_spend_IAP_daily_mini_iceandkey <- xts(first_spend_IAP_daily_mini_iceandkey$first_spender_count,\n                                            order.by = first_spend_IAP_daily_mini_iceandkey$first_spend_date)\nfirst_spend_IAP_daily_small_twiceice <- xts(first_spend_IAP_daily_small_twiceice$first_spender_count,\n                                            order.by = first_spend_IAP_daily_small_twiceice$first_spend_date)\n\n# combine xts objects and re-name columns \nfirst_spend_IAP_daily_DY <- cbind(first_spend_IAP_daily_2xlarge,\n                                  first_spend_IAP_daily_xlarge,\n                                  first_spend_IAP_daily_large,\n                                  first_spend_IAP_daily_medium,\n                                  first_spend_IAP_daily_small,\n                                  first_spend_IAP_daily_mini,\n                                  first_spend_IAP_daily_mini_iceandkey,\n                                  first_spend_IAP_daily_small_twiceice)\ncolnames(first_spend_IAP_daily_DY) = c(\"2xlarge\",\n                                       \"xlarge\",\n                                       \"large\",\n                                       \"medium\",\n                                       \"small\",\n                                       \"mini\",\n                                       \"mini_iceandkey\",\n                                       \"small_twiceice\")\n# Plot DY graph\ndygraph(first_spend_IAP_daily_DY, main = \"Daily First Spend IAP Distribution\") %>%\n  # always put the data with the most NA's at the top, this ensures the Y-axis starts at 0\n  dySeries(\"small_twiceice\", label = \"small_twiceice\") %>%\n  dySeries(\"mini_iceandkey\", label = \"mini_iceandkey\") %>%\n  dySeries(\"mini\", label = \"mini\") %>%\n  dySeries(\"small\", label = \"small\") %>%\n  dySeries(\"medium\", label = \"medium\") %>%\n  dySeries(\"large\", label = \"large\") %>%\n  dySeries(\"xlarge\", label = \"xlarge\") %>%\n  dySeries(\"2xlarge\", label = \"2xlarge\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First Spender Count by IAPs Purchased\") %>%\n  dyAxis(\"x\", label = \"IAPs Purchased\")\n\n##================\n## Dygraphs: Daily First Spend IAP Distribution (Percent)\n##================\nfirst_spend_IAP_daily_percent <- data.table(first_spend_IAP_daily_percent)\n\n# Create new datasets for subsetting \nfirst_spend_IAP_daily_percent_2xlarge <- first_spend_IAP_daily_percent[productid == \"2xlarge\"]\nfirst_spend_IAP_daily_percent_xlarge <- first_spend_IAP_daily_percent[productid == \"xlarge\"]\nfirst_spend_IAP_daily_percent_large <- first_spend_IAP_daily_percent[productid == \"large\"]\nfirst_spend_IAP_daily_percent_medium <- first_spend_IAP_daily_percent[productid == \"medium\"]\nfirst_spend_IAP_daily_percent_small <- first_spend_IAP_daily_percent[productid == \"small\"]\nfirst_spend_IAP_daily_percent_mini <- first_spend_IAP_daily_percent[productid == \"mini\"]\nfirst_spend_IAP_daily_percent_mini_iceandkey <- first_spend_IAP_daily_percent[productid == \"mini_iceandkey\"]\nfirst_spend_IAP_daily_percent_small_twiceice <- first_spend_IAP_daily_percent[productid == \"small_twiceice\"]\n\n# Create subsets \nfirst_spend_IAP_daily_percent_2xlarge <- subset(first_spend_IAP_daily_percent_2xlarge, select = c(\"first_spend_date\", \"first_spender_percent\"))\nfirst_spend_IAP_daily_percent_xlarge <- subset(first_spend_IAP_daily_percent_xlarge, select = c(\"first_spend_date\", \"first_spender_percent\"))\nfirst_spend_IAP_daily_percent_large <- subset(first_spend_IAP_daily_percent_large, select = c(\"first_spend_date\", \"first_spender_percent\"))\nfirst_spend_IAP_daily_percent_medium <- subset(first_spend_IAP_daily_percent_medium, select = c(\"first_spend_date\", \"first_spender_percent\"))\nfirst_spend_IAP_daily_percent_small <- subset(first_spend_IAP_daily_percent_small, select = c(\"first_spend_date\", \"first_spender_percent\"))\nfirst_spend_IAP_daily_percent_mini <- subset(first_spend_IAP_daily_percent_mini, select = c(\"first_spend_date\", \"first_spender_percent\"))\nfirst_spend_IAP_daily_percent_mini_iceandkey <- subset(first_spend_IAP_daily_percent_mini_iceandkey, select = c(\"first_spend_date\", \"first_spender_percent\"))\nfirst_spend_IAP_daily_percent_small_twiceice <- subset(first_spend_IAP_daily_percent_small_twiceice, select = c(\"first_spend_date\", \"first_spender_percent\"))\n\n# Create XTS Objects \nfirst_spend_IAP_daily_percent_2xlarge <- xts(first_spend_IAP_daily_percent_2xlarge$first_spender_percent,\n                                             order.by = first_spend_IAP_daily_percent_2xlarge$first_spend_date)\nfirst_spend_IAP_daily_percent_xlarge <- xts(first_spend_IAP_daily_percent_xlarge$first_spender_percent,\n                                            order.by = first_spend_IAP_daily_percent_xlarge$first_spend_date)\nfirst_spend_IAP_daily_percent_large <- xts(first_spend_IAP_daily_percent_large$first_spender_percent,\n                                           order.by = first_spend_IAP_daily_percent_large$first_spend_date)\nfirst_spend_IAP_daily_percent_medium <- xts(first_spend_IAP_daily_percent_medium$first_spender_percent,\n                                            order.by = first_spend_IAP_daily_percent_medium$first_spend_date)\nfirst_spend_IAP_daily_percent_small <- xts(first_spend_IAP_daily_percent_small$first_spender_percent,\n                                           order.by = first_spend_IAP_daily_percent_small$first_spend_date)\nfirst_spend_IAP_daily_percent_mini <- xts(first_spend_IAP_daily_percent_mini$first_spender_percent,\n                                          order.by = first_spend_IAP_daily_percent_mini$first_spend_date)\nfirst_spend_IAP_daily_percent_mini_iceandkey <- xts(first_spend_IAP_daily_percent_mini_iceandkey$first_spender_percent,\n                                                    order.by = first_spend_IAP_daily_percent_mini_iceandkey$first_spend_date)\nfirst_spend_IAP_daily_percent_small_twiceice <- xts(first_spend_IAP_daily_percent_small_twiceice$first_spender_percent,\n                                                    order.by = first_spend_IAP_daily_percent_small_twiceice$first_spend_date)\n\n# combine xts objects and re-name columns \nfirst_spend_IAP_daily_percent_DY <- cbind(first_spend_IAP_daily_percent_2xlarge,\n                                          first_spend_IAP_daily_percent_xlarge,\n                                          first_spend_IAP_daily_percent_large,\n                                          first_spend_IAP_daily_percent_medium,\n                                          first_spend_IAP_daily_percent_small,\n                                          first_spend_IAP_daily_percent_mini,\n                                          first_spend_IAP_daily_percent_mini_iceandkey,\n                                          first_spend_IAP_daily_percent_small_twiceice)\ncolnames(first_spend_IAP_daily_percent_DY) = c(\"2xlarge\",\n                                               \"xlarge\",\n                                               \"large\",\n                                               \"medium\",\n                                               \"small\",\n                                               \"mini\",\n                                               \"mini_iceandkey\",\n                                               \"small_twiceice\")\n# Plot DY graph\ndygraph(first_spend_IAP_daily_percent_DY, main = \"Daily First Spend IAP Distribution Percents\") %>%\n  # always put the data with the most NA's at the top, this ensures the Y-axis starts at 0\n  dySeries(\"small_twiceice\", label = \"small_twiceice\") %>%\n  dySeries(\"mini_iceandkey\", label = \"mini_iceandkey\") %>%\n  dySeries(\"mini\", label = \"mini\") %>%\n  dySeries(\"small\", label = \"small\") %>%\n  dySeries(\"medium\", label = \"medium\") %>%\n  dySeries(\"large\", label = \"large\") %>%\n  dySeries(\"xlarge\", label = \"xlarge\") %>%\n  dySeries(\"2xlarge\", label = \"2xlarge\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First Spender Percents by IAPs Purchased\") %>%\n  dyAxis(\"x\", label = \"IAPs Purchased\") \n\n##===================\n## Dygraphs: First Spender's First Ice Sink (Post Spend)\n##=================== \n# make data table \nfirst_spender_first_ice_sink_daily <- data.table(first_spender_first_ice_sink_daily)\n\n# Create new datasets for subsets \nfirst_spender_first_ice_sink_daily_boost <- first_spender_first_ice_sink_daily[first_ice_item == \"boost\"]\nfirst_spender_first_ice_sink_daily_box <- first_spender_first_ice_sink_daily[first_ice_item == \"box\"]\nfirst_spender_first_ice_sink_daily_hero <- first_spender_first_ice_sink_daily[first_ice_item == \"hero\"]\nfirst_spender_first_ice_sink_daily_skin <- first_spender_first_ice_sink_daily[first_ice_item == \"skin\"]\nfirst_spender_first_ice_sink_daily_casual_aral_reroll <- first_spender_first_ice_sink_daily[first_ice_item == \"casual_aral_reroll\"]\nfirst_spender_first_ice_sink_daily_seasonKey <- first_spender_first_ice_sink_daily[first_ice_item == \"seasonKey\"]\n\n# Create subsets \nfirst_spender_first_ice_sink_daily_boost <- subset(first_spender_first_ice_sink_daily_boost, select = c(\"first_ice_sink_date\", \"first_spender_count\"))\nfirst_spender_first_ice_sink_daily_box <- subset(first_spender_first_ice_sink_daily_box, select = c(\"first_ice_sink_date\", \"first_spender_count\"))\nfirst_spender_first_ice_sink_daily_hero <- subset(first_spender_first_ice_sink_daily_hero, select = c(\"first_ice_sink_date\", \"first_spender_count\"))\nfirst_spender_first_ice_sink_daily_skin <- subset(first_spender_first_ice_sink_daily_skin, select = c(\"first_ice_sink_date\", \"first_spender_count\"))\nfirst_spender_first_ice_sink_daily_casual_aral_reroll <- subset(first_spender_first_ice_sink_daily_casual_aral_reroll, select = c(\"first_ice_sink_date\", \"first_spender_count\"))\nfirst_spender_first_ice_sink_daily_seasonKey <- subset(first_spender_first_ice_sink_daily_seasonKey, select = c(\"first_ice_sink_date\", \"first_spender_count\"))\n\n# Create XTS objects \nfirst_spender_first_ice_sink_daily_boost <- xts(first_spender_first_ice_sink_daily_boost$first_spender_count, \n                                                order.by = first_spender_first_ice_sink_daily_boost$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_box <- xts(first_spender_first_ice_sink_daily_box$first_spender_count, \n                                              order.by = first_spender_first_ice_sink_daily_box$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_hero <- xts(first_spender_first_ice_sink_daily_hero$first_spender_count, \n                                               order.by = first_spender_first_ice_sink_daily_hero$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_skin <- xts(first_spender_first_ice_sink_daily_skin$first_spender_count, \n                                               order.by = first_spender_first_ice_sink_daily_skin$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_casual_aral_reroll <- xts(first_spender_first_ice_sink_daily_casual_aral_reroll$first_spender_count, \n                                                             order.by = first_spender_first_ice_sink_daily_casual_aral_reroll$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_seasonKey <- xts(first_spender_first_ice_sink_daily_seasonKey$first_spender_count, \n                                                    order.by = first_spender_first_ice_sink_daily_seasonKey$first_ice_sink_date)\n\n# combine xts objects and re-name columns \nfirst_spender_first_ice_sink_daily_combinedSeries <- cbind(first_spender_first_ice_sink_daily_boost,\n                                                           first_spender_first_ice_sink_daily_box,\n                                                           first_spender_first_ice_sink_daily_hero,\n                                                           first_spender_first_ice_sink_daily_skin,\n                                                           first_spender_first_ice_sink_daily_casual_aral_reroll,\n                                                           first_spender_first_ice_sink_daily_seasonKey)\ncolnames(first_spender_first_ice_sink_daily_combinedSeries) = c(\"boost\",\n                                                                \"box\",\n                                                                \"hero\",\n                                                                \"skin\",\n                                                                \"casual_aral_reroll\",\n                                                                \"seasonKey\")\n\n# Plot DyGraph \ndygraph(first_spender_first_ice_sink_daily_combinedSeries,\n        main = \"First Spender's First Ice Sink (Post Spend)\") %>%\n  dySeries(\"boost\", label = \"New boost\") %>%\n  dySeries(\"box\", label = \"box\") %>%\n  dySeries(\"hero\", label = \"hero\") %>%\n  dySeries(\"skin\", label = \"skin\") %>%\n  dySeries(\"casual_aral_reroll\", label = \"casual_aral_reroll\") %>%\n  dySeries(\"seasonKey\", label = \"seasonKey\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First ICE Item Counts (Post 1st IAP Spend)\") %>% \n  dyAxis(\"x\", label = \"First ICE Sink Date (Post 1st IAP Spend)\")\n\n##===================\n## Dygraphs: First Spender's First Ice Sink Percents (Post Spend)\n##===================\n# make data table \nfirst_spender_first_ice_sink_daily_percent <- data.table(first_spender_first_ice_sink_daily_percent)\n\n# Create new datasets for subsets \nfirst_spender_first_ice_sink_daily_percent_boost <- first_spender_first_ice_sink_daily_percent[first_ice_item == \"boost\"]\nfirst_spender_first_ice_sink_daily_percent_box <- first_spender_first_ice_sink_daily_percent[first_ice_item == \"box\"]\nfirst_spender_first_ice_sink_daily_percent_hero <- first_spender_first_ice_sink_daily_percent[first_ice_item == \"hero\"]\nfirst_spender_first_ice_sink_daily_percent_skin <- first_spender_first_ice_sink_daily_percent[first_ice_item == \"skin\"]\nfirst_spender_first_ice_sink_daily_percent_casual_aral_reroll <- first_spender_first_ice_sink_daily_percent[first_ice_item == \"casual_aral_reroll\"]\nfirst_spender_first_ice_sink_daily_percent_seasonKey <- first_spender_first_ice_sink_daily_percent[first_ice_item == \"seasonKey\"]\n\n# Create subsets \nfirst_spender_first_ice_sink_daily_percent_boost <- subset(first_spender_first_ice_sink_daily_percent_boost, select = c(\"first_ice_sink_date\", \"first_ice_item_percent\"))\nfirst_spender_first_ice_sink_daily_percent_box <- subset(first_spender_first_ice_sink_daily_percent_box, select = c(\"first_ice_sink_date\", \"first_ice_item_percent\"))\nfirst_spender_first_ice_sink_daily_percent_hero <- subset(first_spender_first_ice_sink_daily_percent_hero, select = c(\"first_ice_sink_date\", \"first_ice_item_percent\"))\nfirst_spender_first_ice_sink_daily_percent_skin <- subset(first_spender_first_ice_sink_daily_percent_skin, select = c(\"first_ice_sink_date\", \"first_ice_item_percent\"))\nfirst_spender_first_ice_sink_daily_percent_casual_aral_reroll <- subset(first_spender_first_ice_sink_daily_percent_casual_aral_reroll, select = c(\"first_ice_sink_date\", \"first_ice_item_percent\"))\nfirst_spender_first_ice_sink_daily_percent_seasonKey <- subset(first_spender_first_ice_sink_daily_percent_seasonKey, select = c(\"first_ice_sink_date\", \"first_ice_item_percent\"))\n\n# Create XTS objects \nfirst_spender_first_ice_sink_daily_percent_boost <- xts(first_spender_first_ice_sink_daily_percent_boost$first_ice_item_percent, \n                                                        order.by = first_spender_first_ice_sink_daily_percent_boost$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_percent_box <- xts(first_spender_first_ice_sink_daily_percent_box$first_ice_item_percent, \n                                                      order.by = first_spender_first_ice_sink_daily_percent_box$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_percent_hero <- xts(first_spender_first_ice_sink_daily_percent_hero$first_ice_item_percent, \n                                                       order.by = first_spender_first_ice_sink_daily_percent_hero$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_percent_skin <- xts(first_spender_first_ice_sink_daily_percent_skin$first_ice_item_percent, \n                                                       order.by = first_spender_first_ice_sink_daily_percent_skin$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_percent_casual_aral_reroll <- xts(first_spender_first_ice_sink_daily_percent_casual_aral_reroll$first_ice_item_percent, \n                                                                     order.by = first_spender_first_ice_sink_daily_percent_casual_aral_reroll$first_ice_sink_date)\nfirst_spender_first_ice_sink_daily_percent_seasonKey <- xts(first_spender_first_ice_sink_daily_percent_seasonKey$first_ice_item_percent, \n                                                            order.by = first_spender_first_ice_sink_daily_percent_seasonKey$first_ice_sink_date)\n\n# combine xts objects and re-name columns \nfirst_spender_first_ice_sink_daily_percent_combinedSeries <- cbind(first_spender_first_ice_sink_daily_percent_boost,\n                                                                   first_spender_first_ice_sink_daily_percent_box,\n                                                                   first_spender_first_ice_sink_daily_percent_hero,\n                                                                   first_spender_first_ice_sink_daily_percent_skin,\n                                                                   first_spender_first_ice_sink_daily_percent_casual_aral_reroll,\n                                                                   first_spender_first_ice_sink_daily_percent_seasonKey)\ncolnames(first_spender_first_ice_sink_daily_percent_combinedSeries) = c(\"boost\",\n                                                                        \"box\",\n                                                                        \"hero\",\n                                                                        \"skin\",\n                                                                        \"casual_aral_reroll\",\n                                                                        \"seasonKey\")\n\n# Plot DyGraph \ndygraph(first_spender_first_ice_sink_daily_percent_combinedSeries,\n        main = \"First Spender's First Ice Sink Percents (Post Spend)\") %>%\n  dySeries(\"hero\", label = \"hero\", color = \"purple\") %>%\n  dySeries(\"boost\", label = \"boost\", color = \"blue\") %>%\n  dySeries(\"box\", label = \"box\", color = \"green\") %>%\n  #dySeries(\"seasonKey\", label = \"seasonKey\") %>%\n  dySeries(\"casual_aral_reroll\", label = \"casual_aral_reroll\", color = \"orange\") %>%\n  dySeries(\"skin\", label = \"skin\", color = \"red\") %>%\n  dyOptions(stackedGraph = TRUE) %>%  \n  dyRangeSelector(height = 20) %>%\n  dyAxis(\"y\", label = \"First ICE Sink Percents\", valueRange = c(0,110)) %>% \n  dyAxis(\"x\", label = \"Event Dates\")\n\n\n\n\n\n\n\n\n\n",
    "created" : 1476315470901.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "812459928",
    "id" : "A9C3FDDE",
    "lastKnownWriteTime" : 1476076925,
    "last_content_update" : 1476076925,
    "path" : "~/Documents/R_Projects/First_Spend/First_Spend_DY.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}